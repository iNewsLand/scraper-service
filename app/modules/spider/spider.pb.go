// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scraper.proto

package spider

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("scraper.proto", fileDescriptor_cb38e26738aa8833)
}

var fileDescriptor_cb38e26738aa8833 = []byte{
	// 65 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0xc8, 0x4c,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x8c, 0xf8, 0xb9, 0x78,
	0x83, 0xc1, 0xac, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x27, 0x8e, 0x28, 0xa8, 0x54, 0x12,
	0x1b, 0x58, 0xa5, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x86, 0x3a, 0xe4, 0x39, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpiderServiceClient is the client API for SpiderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpiderServiceClient interface {
}

type spiderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpiderServiceClient(cc grpc.ClientConnInterface) SpiderServiceClient {
	return &spiderServiceClient{cc}
}

// SpiderServiceServer is the server API for SpiderService service.
type SpiderServiceServer interface {
}

// UnimplementedSpiderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpiderServiceServer struct {
}

func RegisterSpiderServiceServer(s *grpc.Server, srv SpiderServiceServer) {
	s.RegisterService(&_SpiderService_serviceDesc, srv)
}

var _SpiderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spider.SpiderService",
	HandlerType: (*SpiderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "scraper.proto",
}
